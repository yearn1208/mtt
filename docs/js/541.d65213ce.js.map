{"version":3,"file":"js/541.d65213ce.js","mappings":"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","sources":["webpack://test/./src/views/VirtualList/index.vue","webpack://test/./node_modules/vue-resize/dist/vue-resize.esm.js","webpack://test/./node_modules/vue-observe-visibility/dist/vue-observe-visibility.esm.js","webpack://test/../src/config.js","webpack://test/../src/components/common.js","webpack://test/../src/utils.js","webpack://test/../src/components/RecycleScroller.vue","webpack://test/../src/components/DynamicScroller.vue","webpack://test/../src/components/DynamicScrollerItem.vue","webpack://test/../src/index.js","webpack://test/src/views/VirtualList/index.vue","webpack://test/./src/views/VirtualList/index.vue?2a3e","webpack://test/./src/views/VirtualList/index.vue?0fbd","webpack://test/./node_modules/scrollparent/scrollparent.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{attrs:{\"id\":\"wrapper\"}},[_c('div',{ref:\"content\",attrs:{\"id\":\"content\"}},_vm._l((_vm.tableData),function(i){return _c('div',{key:i.id,attrs:{\"id\":\"content-item\"}},[_vm._v(\" \"+_vm._s(i.name)+\" \")])}),0)]),_c('el-button',{on:{\"click\":_vm.goBottom}},[_vm._v(\"底部\")]),_c('el-button',{on:{\"click\":_vm.goTop}},[_vm._v(\"顶部\")]),_c('br'),_c('br'),_c('br'),_c('br'),_c('br')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","function getInternetExplorerVersion() {\n\tvar ua = window.navigator.userAgent;\n\n\tvar msie = ua.indexOf('MSIE ');\n\tif (msie > 0) {\n\t\t// IE 10 or older => return version number\n\t\treturn parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n\t}\n\n\tvar trident = ua.indexOf('Trident/');\n\tif (trident > 0) {\n\t\t// IE 11 => return version number\n\t\tvar rv = ua.indexOf('rv:');\n\t\treturn parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n\t}\n\n\tvar edge = ua.indexOf('Edge/');\n\tif (edge > 0) {\n\t\t// Edge (IE 12+) => return version number\n\t\treturn parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n\t}\n\n\t// other browser\n\treturn -1;\n}\n\nvar isIE = void 0;\n\nfunction initCompat() {\n\tif (!initCompat.init) {\n\t\tinitCompat.init = true;\n\t\tisIE = getInternetExplorerVersion() !== -1;\n\t}\n}\n\nvar ResizeObserver = { render: function render() {\n\t\tvar _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"resize-observer\", attrs: { \"tabindex\": \"-1\" } });\n\t}, staticRenderFns: [], _scopeId: 'data-v-b329ee4c',\n\tname: 'resize-observer',\n\n\tmethods: {\n\t\tcompareAndNotify: function compareAndNotify() {\n\t\t\tif (this._w !== this.$el.offsetWidth || this._h !== this.$el.offsetHeight) {\n\t\t\t\tthis._w = this.$el.offsetWidth;\n\t\t\t\tthis._h = this.$el.offsetHeight;\n\t\t\t\tthis.$emit('notify');\n\t\t\t}\n\t\t},\n\t\taddResizeHandlers: function addResizeHandlers() {\n\t\t\tthis._resizeObject.contentDocument.defaultView.addEventListener('resize', this.compareAndNotify);\n\t\t\tthis.compareAndNotify();\n\t\t},\n\t\tremoveResizeHandlers: function removeResizeHandlers() {\n\t\t\tif (this._resizeObject && this._resizeObject.onload) {\n\t\t\t\tif (!isIE && this._resizeObject.contentDocument) {\n\t\t\t\t\tthis._resizeObject.contentDocument.defaultView.removeEventListener('resize', this.compareAndNotify);\n\t\t\t\t}\n\t\t\t\tdelete this._resizeObject.onload;\n\t\t\t}\n\t\t}\n\t},\n\n\tmounted: function mounted() {\n\t\tvar _this = this;\n\n\t\tinitCompat();\n\t\tthis.$nextTick(function () {\n\t\t\t_this._w = _this.$el.offsetWidth;\n\t\t\t_this._h = _this.$el.offsetHeight;\n\t\t});\n\t\tvar object = document.createElement('object');\n\t\tthis._resizeObject = object;\n\t\tobject.setAttribute('aria-hidden', 'true');\n\t\tobject.setAttribute('tabindex', -1);\n\t\tobject.onload = this.addResizeHandlers;\n\t\tobject.type = 'text/html';\n\t\tif (isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t\tobject.data = 'about:blank';\n\t\tif (!isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t},\n\tbeforeDestroy: function beforeDestroy() {\n\t\tthis.removeResizeHandlers();\n\t}\n};\n\n// Install the components\nfunction install(Vue) {\n\tVue.component('resize-observer', ResizeObserver);\n\tVue.component('ResizeObserver', ResizeObserver);\n}\n\n// Plugin\nvar plugin = {\n\t// eslint-disable-next-line no-undef\n\tversion: \"0.4.5\",\n\tinstall: install\n};\n\n// Auto-install\nvar GlobalVue = null;\nif (typeof window !== 'undefined') {\n\tGlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n\tGlobalVue = global.Vue;\n}\nif (GlobalVue) {\n\tGlobalVue.use(plugin);\n}\n\nexport { install, ResizeObserver };\nexport default plugin;\n","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction processOptions(value) {\n  var options;\n\n  if (typeof value === 'function') {\n    // Simple options (callback-only)\n    options = {\n      callback: value\n    };\n  } else {\n    // Options object\n    options = value;\n  }\n\n  return options;\n}\nfunction throttle(callback, delay) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var timeout;\n  var lastState;\n  var currentArgs;\n\n  var throttled = function throttled(state) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    currentArgs = args;\n    if (timeout && state === lastState) return;\n    var leading = options.leading;\n\n    if (typeof leading === 'function') {\n      leading = leading(state, lastState);\n    }\n\n    if ((!timeout || state !== lastState) && leading) {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n    }\n\n    lastState = state;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n      timeout = 0;\n    }, delay);\n  };\n\n  throttled._clear = function () {\n    clearTimeout(timeout);\n    timeout = null;\n  };\n\n  return throttled;\n}\nfunction deepEqual(val1, val2) {\n  if (val1 === val2) return true;\n\n  if (_typeof(val1) === 'object') {\n    for (var key in val1) {\n      if (!deepEqual(val1[key], val2[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nvar VisibilityState =\n/*#__PURE__*/\nfunction () {\n  function VisibilityState(el, options, vnode) {\n    _classCallCheck(this, VisibilityState);\n\n    this.el = el;\n    this.observer = null;\n    this.frozen = false;\n    this.createObserver(options, vnode);\n  }\n\n  _createClass(VisibilityState, [{\n    key: \"createObserver\",\n    value: function createObserver(options, vnode) {\n      var _this = this;\n\n      if (this.observer) {\n        this.destroyObserver();\n      }\n\n      if (this.frozen) return;\n      this.options = processOptions(options);\n\n      this.callback = function (result, entry) {\n        _this.options.callback(result, entry);\n\n        if (result && _this.options.once) {\n          _this.frozen = true;\n\n          _this.destroyObserver();\n        }\n      }; // Throttle\n\n\n      if (this.callback && this.options.throttle) {\n        var _ref = this.options.throttleOptions || {},\n            _leading = _ref.leading;\n\n        this.callback = throttle(this.callback, this.options.throttle, {\n          leading: function leading(state) {\n            return _leading === 'both' || _leading === 'visible' && state || _leading === 'hidden' && !state;\n          }\n        });\n      }\n\n      this.oldResult = undefined;\n      this.observer = new IntersectionObserver(function (entries) {\n        var entry = entries[0];\n\n        if (entries.length > 1) {\n          var intersectingEntry = entries.find(function (e) {\n            return e.isIntersecting;\n          });\n\n          if (intersectingEntry) {\n            entry = intersectingEntry;\n          }\n        }\n\n        if (_this.callback) {\n          // Use isIntersecting if possible because browsers can report isIntersecting as true, but intersectionRatio as 0, when something very slowly enters the viewport.\n          var result = entry.isIntersecting && entry.intersectionRatio >= _this.threshold;\n          if (result === _this.oldResult) return;\n          _this.oldResult = result;\n\n          _this.callback(result, entry);\n        }\n      }, this.options.intersection); // Wait for the element to be in document\n\n      vnode.context.$nextTick(function () {\n        if (_this.observer) {\n          _this.observer.observe(_this.el);\n        }\n      });\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.observer) {\n        this.observer.disconnect();\n        this.observer = null;\n      } // Cancel throttled call\n\n\n      if (this.callback && this.callback._clear) {\n        this.callback._clear();\n\n        this.callback = null;\n      }\n    }\n  }, {\n    key: \"threshold\",\n    get: function get() {\n      return this.options.intersection && this.options.intersection.threshold || 0;\n    }\n  }]);\n\n  return VisibilityState;\n}();\n\nfunction bind(el, _ref2, vnode) {\n  var value = _ref2.value;\n  if (!value) return;\n\n  if (typeof IntersectionObserver === 'undefined') {\n    console.warn('[vue-observe-visibility] IntersectionObserver API is not available in your browser. Please install this polyfill: https://github.com/w3c/IntersectionObserver/tree/master/polyfill');\n  } else {\n    var state = new VisibilityState(el, value, vnode);\n    el._vue_visibilityState = state;\n  }\n}\n\nfunction update(el, _ref3, vnode) {\n  var value = _ref3.value,\n      oldValue = _ref3.oldValue;\n  if (deepEqual(value, oldValue)) return;\n  var state = el._vue_visibilityState;\n\n  if (!value) {\n    unbind(el);\n    return;\n  }\n\n  if (state) {\n    state.createObserver(value, vnode);\n  } else {\n    bind(el, {\n      value: value\n    }, vnode);\n  }\n}\n\nfunction unbind(el) {\n  var state = el._vue_visibilityState;\n\n  if (state) {\n    state.destroyObserver();\n    delete el._vue_visibilityState;\n  }\n}\n\nvar ObserveVisibility = {\n  bind: bind,\n  update: update,\n  unbind: unbind\n};\n\nfunction install(Vue) {\n  Vue.directive('observe-visibility', ObserveVisibility);\n  /* -- Add more components here -- */\n}\n/* -- Plugin definition & Auto-install -- */\n\n/* You shouldn't have to modify the code below */\n// Plugin\n\nvar plugin = {\n  // eslint-disable-next-line no-undef\n  version: \"0.4.6\",\n  install: install\n};\n\nvar GlobalVue = null;\n\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue;\n}\n\nif (GlobalVue) {\n  GlobalVue.use(plugin);\n}\n\nexport default plugin;\nexport { ObserveVisibility, install };\n","export default {\n  itemsLimit: 1000,\n}\n","export const props = {\n  items: {\n    type: Array,\n    required: true,\n  },\n\n  keyField: {\n    type: String,\n    default: 'id',\n  },\n\n  direction: {\n    type: String,\n    default: 'vertical',\n    validator: (value) => ['vertical', 'horizontal'].includes(value),\n  },\n\n  listTag: {\n    type: String,\n    default: 'div',\n  },\n\n  itemTag: {\n    type: String,\n    default: 'div',\n  },\n}\n\nexport function simpleArray () {\n  return this.items.length && typeof this.items[0] !== 'object'\n}\n","export let supportsPassive = false\n\nif (typeof window !== 'undefined') {\n  supportsPassive = false\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get () {\n        supportsPassive = true\n      },\n    })\n    window.addEventListener('test', null, opts)\n  } catch (e) {}\n}\n","<template>\n  <div\n    v-observe-visibility=\"handleVisibilityChange\"\n    class=\"vue-recycle-scroller\"\n    :class=\"{\n      ready,\n      'page-mode': pageMode,\n      [`direction-${direction}`]: true,\n    }\"\n    @scroll.passive=\"handleScroll\"\n  >\n    <div\n      v-if=\"$slots.before\"\n      ref=\"before\"\n      class=\"vue-recycle-scroller__slot\"\n    >\n      <slot\n        name=\"before\"\n      />\n    </div>\n\n    <component\n      :is=\"listTag\"\n      ref=\"wrapper\"\n      :style=\"{ [direction === 'vertical' ? 'minHeight' : 'minWidth']: totalSize + 'px' }\"\n      class=\"vue-recycle-scroller__item-wrapper\"\n      :class=\"listClass\"\n    >\n      <component\n        :is=\"itemTag\"\n        v-for=\"view of pool\"\n        :key=\"view.nr.id\"\n        :style=\"ready ? {\n          transform: `translate${direction === 'vertical' ? 'Y' : 'X'}(${view.position}px) translate${direction === 'vertical' ? 'X' : 'Y'}(${view.offset}px)`,\n          width: gridItems ? `${direction === 'vertical' ? itemSecondarySize || itemSize : itemSize}px` : undefined,\n          height: gridItems ? `${direction === 'horizontal' ? itemSecondarySize || itemSize : itemSize}px` : undefined,\n        } : null\"\n        class=\"vue-recycle-scroller__item-view\"\n        :class=\"[\n          itemClass,\n          {\n            hover: !skipHover && hoverKey === view.nr.key\n          },\n        ]\"\n        v-on=\"skipHover ? {} : {\n          mouseenter: () => { hoverKey = view.nr.key },\n          mouseleave: () => { hoverKey = null },\n        }\"\n      >\n        <slot\n          :item=\"view.item\"\n          :index=\"view.nr.index\"\n          :active=\"view.nr.used\"\n        />\n      </component>\n\n      <slot\n        name=\"empty\"\n      />\n    </component>\n\n    <div\n      v-if=\"$slots.after\"\n      ref=\"after\"\n      class=\"vue-recycle-scroller__slot\"\n    >\n      <slot\n        name=\"after\"\n      />\n    </div>\n\n    <ResizeObserver @notify=\"handleResize\" />\n  </div>\n</template>\n\n<script>\nimport { ResizeObserver } from 'vue-resize'\nimport { ObserveVisibility } from 'vue-observe-visibility'\nimport ScrollParent from 'scrollparent'\nimport config from '../config'\nimport { props, simpleArray } from './common'\nimport { supportsPassive } from '../utils'\n\nlet uid = 0\n\nexport default {\n  name: 'RecycleScroller',\n\n  components: {\n    ResizeObserver,\n  },\n\n  directives: {\n    ObserveVisibility,\n  },\n\n  props: {\n    ...props,\n\n    itemSize: {\n      type: Number,\n      default: null,\n    },\n\n    gridItems: {\n      type: Number,\n      default: undefined,\n    },\n\n    itemSecondarySize: {\n      type: Number,\n      default: undefined,\n    },\n\n    minItemSize: {\n      type: [Number, String],\n      default: null,\n    },\n\n    sizeField: {\n      type: String,\n      default: 'size',\n    },\n\n    typeField: {\n      type: String,\n      default: 'type',\n    },\n\n    buffer: {\n      type: Number,\n      default: 200,\n    },\n\n    pageMode: {\n      type: Boolean,\n      default: false,\n    },\n\n    prerender: {\n      type: Number,\n      default: 0,\n    },\n\n    emitUpdate: {\n      type: Boolean,\n      default: false,\n    },\n\n    skipHover: {\n      type: Boolean,\n      default: false,\n    },\n\n    listTag: {\n      type: String,\n      default: 'div',\n    },\n\n    itemTag: {\n      type: String,\n      default: 'div',\n    },\n\n    listClass: {\n      type: [String, Object, Array],\n      default: '',\n    },\n\n    itemClass: {\n      type: [String, Object, Array],\n      default: '',\n    },\n  },\n\n  data () {\n    return {\n      pool: [],\n      totalSize: 0,\n      ready: false,\n      hoverKey: null,\n    }\n  },\n\n  computed: {\n    sizes () {\n      if (this.itemSize === null) {\n        const sizes = {\n          '-1': { accumulator: 0 },\n        }\n        const items = this.items\n        const field = this.sizeField\n        const minItemSize = this.minItemSize\n        let computedMinSize = 10000\n        let accumulator = 0\n        let current\n        for (let i = 0, l = items.length; i < l; i++) {\n          current = items[i][field] || minItemSize\n          if (current < computedMinSize) {\n            computedMinSize = current\n          }\n          accumulator += current\n          sizes[i] = { accumulator, size: current }\n        }\n        // eslint-disable-next-line\n        this.$_computedMinItemSize = computedMinSize\n        return sizes\n      }\n      return []\n    },\n\n    simpleArray,\n  },\n\n  watch: {\n    items () {\n      this.updateVisibleItems(true)\n    },\n\n    pageMode () {\n      this.applyPageMode()\n      this.updateVisibleItems(false)\n    },\n\n    sizes: {\n      handler () {\n        this.updateVisibleItems(false)\n      },\n      deep: true,\n    },\n\n    gridItems () {\n      this.updateVisibleItems(true)\n    },\n\n    itemSecondarySize () {\n      this.updateVisibleItems(true)\n    },\n  },\n\n  created () {\n    this.$_startIndex = 0\n    this.$_endIndex = 0\n    this.$_views = new Map()\n    this.$_unusedViews = new Map()\n    this.$_scrollDirty = false\n    this.$_lastUpdateScrollPosition = 0\n\n    // In SSR mode, we also prerender the same number of item for the first render\n    // to avoir mismatch between server and client templates\n    if (this.prerender) {\n      this.$_prerender = true\n      this.updateVisibleItems(false)\n    }\n\n    if (this.gridItems && !this.itemSize) {\n      console.error('[vue-recycle-scroller] You must provide an itemSize when using gridItems')\n    }\n  },\n\n  mounted () {\n    this.applyPageMode()\n    this.$nextTick(() => {\n      // In SSR mode, render the real number of visible items\n      this.$_prerender = false\n      this.updateVisibleItems(true)\n      this.ready = true\n    })\n  },\n\n  activated () {\n    const lastPosition = this.$_lastUpdateScrollPosition\n    if (typeof lastPosition === 'number') {\n      this.$nextTick(() => {\n        this.scrollToPosition(lastPosition)\n      })\n    }\n  },\n\n  beforeDestroy () {\n    this.removeListeners()\n  },\n\n  methods: {\n    addView (pool, index, item, key, type) {\n      const view = {\n        item,\n        position: 0,\n      }\n      const nonReactive = {\n        id: uid++,\n        index,\n        used: true,\n        key,\n        type,\n      }\n      Object.defineProperty(view, 'nr', {\n        configurable: false,\n        value: nonReactive,\n      })\n      pool.push(view)\n      return view\n    },\n\n    unuseView (view, fake = false) {\n      const unusedViews = this.$_unusedViews\n      const type = view.nr.type\n      let unusedPool = unusedViews.get(type)\n      if (!unusedPool) {\n        unusedPool = []\n        unusedViews.set(type, unusedPool)\n      }\n      unusedPool.push(view)\n      if (!fake) {\n        view.nr.used = false\n        view.position = -9999\n        this.$_views.delete(view.nr.key)\n      }\n    },\n\n    handleResize () {\n      this.$emit('resize')\n      if (this.ready) this.updateVisibleItems(false)\n    },\n\n    handleScroll (event) {\n      if (!this.$_scrollDirty) {\n        this.$_scrollDirty = true\n        requestAnimationFrame(() => {\n          this.$_scrollDirty = false\n          const { continuous } = this.updateVisibleItems(false, true)\n\n          // It seems sometimes chrome doesn't fire scroll event :/\n          // When non continous scrolling is ending, we force a refresh\n          if (!continuous) {\n            clearTimeout(this.$_refreshTimout)\n            this.$_refreshTimout = setTimeout(this.handleScroll, 100)\n          }\n        })\n      }\n    },\n\n    handleVisibilityChange (isVisible, entry) {\n      if (this.ready) {\n        if (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0) {\n          this.$emit('visible')\n          requestAnimationFrame(() => {\n            this.updateVisibleItems(false)\n          })\n        } else {\n          this.$emit('hidden')\n        }\n      }\n    },\n\n    updateVisibleItems (checkItem, checkPositionDiff = false) {\n      const itemSize = this.itemSize\n      const gridItems = this.gridItems || 1\n      const itemSecondarySize = this.itemSecondarySize || itemSize\n      const minItemSize = this.$_computedMinItemSize\n      const typeField = this.typeField\n      const keyField = this.simpleArray ? null : this.keyField\n      const items = this.items\n      const count = items.length\n      const sizes = this.sizes\n      const views = this.$_views\n      const unusedViews = this.$_unusedViews\n      const pool = this.pool\n      let startIndex, endIndex\n      let totalSize\n      let visibleStartIndex, visibleEndIndex\n\n      if (!count) {\n        startIndex = endIndex = visibleStartIndex = visibleEndIndex = totalSize = 0\n      } else if (this.$_prerender) {\n        startIndex = visibleStartIndex = 0\n        endIndex = visibleEndIndex = Math.min(this.prerender, items.length)\n        totalSize = null\n      } else {\n        const scroll = this.getScroll()\n\n        // Skip update if use hasn't scrolled enough\n        if (checkPositionDiff) {\n          let positionDiff = scroll.start - this.$_lastUpdateScrollPosition\n          if (positionDiff < 0) positionDiff = -positionDiff\n          if ((itemSize === null && positionDiff < minItemSize) || positionDiff < itemSize) {\n            return {\n              continuous: true,\n            }\n          }\n        }\n        this.$_lastUpdateScrollPosition = scroll.start\n\n        const buffer = this.buffer\n        scroll.start -= buffer\n        scroll.end += buffer\n\n        // account for leading slot\n        let beforeSize = 0\n        if (this.$refs.before) {\n          beforeSize = this.$refs.before.scrollHeight\n          scroll.start -= beforeSize\n        }\n\n        // account for trailing slot\n        if (this.$refs.after) {\n          const afterSize = this.$refs.after.scrollHeight\n          scroll.end += afterSize\n        }\n\n        // Variable size mode\n        if (itemSize === null) {\n          let h\n          let a = 0\n          let b = count - 1\n          let i = ~~(count / 2)\n          let oldI\n\n          // Searching for startIndex\n          do {\n            oldI = i\n            h = sizes[i].accumulator\n            if (h < scroll.start) {\n              a = i\n            } else if (i < count - 1 && sizes[i + 1].accumulator > scroll.start) {\n              b = i\n            }\n            i = ~~((a + b) / 2)\n          } while (i !== oldI)\n          i < 0 && (i = 0)\n          startIndex = i\n\n          // For container style\n          totalSize = sizes[count - 1].accumulator\n\n          // Searching for endIndex\n          for (endIndex = i; endIndex < count && sizes[endIndex].accumulator < scroll.end; endIndex++);\n          if (endIndex === -1) {\n            endIndex = items.length - 1\n          } else {\n            endIndex++\n            // Bounds\n            endIndex > count && (endIndex = count)\n          }\n\n          // search visible startIndex\n          for (visibleStartIndex = startIndex; visibleStartIndex < count && (beforeSize + sizes[visibleStartIndex].accumulator) < scroll.start; visibleStartIndex++);\n\n          // search visible endIndex\n          for (visibleEndIndex = visibleStartIndex; visibleEndIndex < count && (beforeSize + sizes[visibleEndIndex].accumulator) < scroll.end; visibleEndIndex++);\n        } else {\n          // Fixed size mode\n          startIndex = ~~(scroll.start / itemSize * gridItems)\n          const remainer = startIndex % gridItems\n          startIndex -= remainer\n          endIndex = Math.ceil(scroll.end / itemSize * gridItems)\n          visibleStartIndex = Math.max(0, Math.floor((scroll.start - beforeSize) / itemSize * gridItems))\n          visibleEndIndex = Math.floor((scroll.end - beforeSize) / itemSize * gridItems)\n\n          // Bounds\n          startIndex < 0 && (startIndex = 0)\n          endIndex > count && (endIndex = count)\n          visibleStartIndex < 0 && (visibleStartIndex = 0)\n          visibleEndIndex > count && (visibleEndIndex = count)\n\n          totalSize = Math.ceil(count / gridItems) * itemSize\n        }\n      }\n\n      if (endIndex - startIndex > config.itemsLimit) {\n        this.itemsLimitError()\n      }\n\n      this.totalSize = totalSize\n\n      let view\n\n      const continuous = startIndex <= this.$_endIndex && endIndex >= this.$_startIndex\n\n      if (this.$_continuous !== continuous) {\n        if (continuous) {\n          views.clear()\n          unusedViews.clear()\n          for (let i = 0, l = pool.length; i < l; i++) {\n            view = pool[i]\n            this.unuseView(view)\n          }\n        }\n        this.$_continuous = continuous\n      } else if (continuous) {\n        for (let i = 0, l = pool.length; i < l; i++) {\n          view = pool[i]\n          if (view.nr.used) {\n            // Update view item index\n            if (checkItem) {\n              view.nr.index = items.indexOf(view.item)\n            }\n\n            // Check if index is still in visible range\n            if (\n              view.nr.index === -1 ||\n              view.nr.index < startIndex ||\n              view.nr.index >= endIndex\n            ) {\n              this.unuseView(view)\n            }\n          }\n        }\n      }\n\n      const unusedIndex = continuous ? null : new Map()\n\n      let item, type, unusedPool\n      let v\n      for (let i = startIndex; i < endIndex; i++) {\n        item = items[i]\n        const key = keyField ? item[keyField] : item\n        if (key == null) {\n          throw new Error(`Key is ${key} on item (keyField is '${keyField}')`)\n        }\n        view = views.get(key)\n\n        if (!itemSize && !sizes[i].size) {\n          if (view) this.unuseView(view)\n          continue\n        }\n\n        // No view assigned to item\n        if (!view) {\n          if (i === items.length - 1) this.$emit('scroll-end')\n          if (i === 0) this.$emit('scroll-start')\n\n          type = item[typeField]\n          unusedPool = unusedViews.get(type)\n\n          if (continuous) {\n            // Reuse existing view\n            if (unusedPool && unusedPool.length) {\n              view = unusedPool.pop()\n              view.item = item\n              view.nr.used = true\n              view.nr.index = i\n              view.nr.key = key\n              view.nr.type = type\n            } else {\n              view = this.addView(pool, i, item, key, type)\n            }\n          } else {\n            // Use existing view\n            // We don't care if they are already used\n            // because we are not in continous scrolling\n            v = unusedIndex.get(type) || 0\n\n            if (!unusedPool || v >= unusedPool.length) {\n              view = this.addView(pool, i, item, key, type)\n              this.unuseView(view, true)\n              unusedPool = unusedViews.get(type)\n            }\n\n            view = unusedPool[v]\n            view.item = item\n            view.nr.used = true\n            view.nr.index = i\n            view.nr.key = key\n            view.nr.type = type\n            unusedIndex.set(type, v + 1)\n            v++\n          }\n          views.set(key, view)\n        } else {\n          view.nr.used = true\n          view.item = item\n        }\n\n        // Update position\n        if (itemSize === null) {\n          view.position = sizes[i - 1].accumulator\n          view.offset = 0\n        } else {\n          view.position = Math.floor(i / gridItems) * itemSize\n          view.offset = (i % gridItems) * itemSecondarySize\n        }\n      }\n\n      this.$_startIndex = startIndex\n      this.$_endIndex = endIndex\n\n      if (this.emitUpdate) this.$emit('update', startIndex, endIndex, visibleStartIndex, visibleEndIndex)\n\n      // After the user has finished scrolling\n      // Sort views so text selection is correct\n      clearTimeout(this.$_sortTimer)\n      this.$_sortTimer = setTimeout(this.sortViews, 300)\n\n      return {\n        continuous,\n      }\n    },\n\n    getListenerTarget () {\n      let target = ScrollParent(this.$el)\n      // Fix global scroll target for Chrome and Safari\n      if (window.document && (target === window.document.documentElement || target === window.document.body)) {\n        target = window\n      }\n      return target\n    },\n\n    getScroll () {\n      const { $el: el, direction } = this\n      const isVertical = direction === 'vertical'\n      let scrollState\n\n      if (this.pageMode) {\n        const bounds = el.getBoundingClientRect()\n        const boundsSize = isVertical ? bounds.height : bounds.width\n        let start = -(isVertical ? bounds.top : bounds.left)\n        let size = isVertical ? window.innerHeight : window.innerWidth\n        if (start < 0) {\n          size += start\n          start = 0\n        }\n        if (start + size > boundsSize) {\n          size = boundsSize - start\n        }\n        scrollState = {\n          start,\n          end: start + size,\n        }\n      } else if (isVertical) {\n        scrollState = {\n          start: el.scrollTop,\n          end: el.scrollTop + el.clientHeight,\n        }\n      } else {\n        scrollState = {\n          start: el.scrollLeft,\n          end: el.scrollLeft + el.clientWidth,\n        }\n      }\n\n      return scrollState\n    },\n\n    applyPageMode () {\n      if (this.pageMode) {\n        this.addListeners()\n      } else {\n        this.removeListeners()\n      }\n    },\n\n    addListeners () {\n      this.listenerTarget = this.getListenerTarget()\n      this.listenerTarget.addEventListener('scroll', this.handleScroll, supportsPassive\n        ? {\n            passive: true,\n          }\n        : false)\n      this.listenerTarget.addEventListener('resize', this.handleResize)\n    },\n\n    removeListeners () {\n      if (!this.listenerTarget) {\n        return\n      }\n\n      this.listenerTarget.removeEventListener('scroll', this.handleScroll)\n      this.listenerTarget.removeEventListener('resize', this.handleResize)\n\n      this.listenerTarget = null\n    },\n\n    scrollToItem (index) {\n      let scroll\n      if (this.itemSize === null) {\n        scroll = index > 0 ? this.sizes[index - 1].accumulator : 0\n      } else {\n        scroll = Math.floor(index / this.gridItems) * this.itemSize\n      }\n      this.scrollToPosition(scroll)\n    },\n\n    scrollToPosition (position) {\n      const direction = this.direction === 'vertical'\n        ? { scroll: 'scrollTop', start: 'top' }\n        : { scroll: 'scrollLeft', start: 'left' }\n\n      let viewport\n      let scrollDirection\n      let scrollDistance\n\n      if (this.pageMode) {\n        const viewportEl = ScrollParent(this.$el)\n        // HTML doesn't overflow like other elements\n        const scrollTop = viewportEl.tagName === 'HTML' ? 0 : viewportEl[direction.scroll]\n        const bounds = viewportEl.getBoundingClientRect()\n\n        const scroller = this.$el.getBoundingClientRect()\n        const scrollerPosition = scroller[direction.start] - bounds[direction.start]\n\n        viewport = viewportEl\n        scrollDirection = direction.scroll\n        scrollDistance = position + scrollTop + scrollerPosition\n      } else {\n        viewport = this.$el\n        scrollDirection = direction.scroll\n        scrollDistance = position\n      }\n\n      viewport[scrollDirection] = scrollDistance\n    },\n\n    itemsLimitError () {\n      setTimeout(() => {\n        console.log('It seems the scroller element isn\\'t scrolling, so it tries to render all the items at once.', 'Scroller:', this.$el)\n        console.log('Make sure the scroller has a fixed height (or width) and \\'overflow-y\\' (or \\'overflow-x\\') set to \\'auto\\' so it can scroll correctly and only render the items visible in the scroll viewport.')\n      })\n      throw new Error('Rendered items limit reached')\n    },\n\n    sortViews () {\n      this.pool.sort((viewA, viewB) => viewA.nr.index - viewB.nr.index)\n    },\n  },\n}\n</script>\n\n<style>\n.vue-recycle-scroller {\n  position: relative;\n}\n\n.vue-recycle-scroller.direction-vertical:not(.page-mode) {\n  overflow-y: auto;\n}\n\n.vue-recycle-scroller.direction-horizontal:not(.page-mode) {\n  overflow-x: auto;\n}\n\n.vue-recycle-scroller.direction-horizontal {\n  display: flex;\n}\n\n.vue-recycle-scroller__slot {\n  flex: auto 0 0;\n}\n\n.vue-recycle-scroller__item-wrapper {\n  flex: 1;\n  box-sizing: border-box;\n  overflow: hidden;\n  position: relative;\n}\n\n.vue-recycle-scroller.ready .vue-recycle-scroller__item-view {\n  position: absolute;\n  top: 0;\n  left: 0;\n  will-change: transform;\n}\n\n.vue-recycle-scroller.direction-vertical .vue-recycle-scroller__item-wrapper {\n  width: 100%;\n}\n\n.vue-recycle-scroller.direction-horizontal .vue-recycle-scroller__item-wrapper {\n  height: 100%;\n}\n\n.vue-recycle-scroller.ready.direction-vertical .vue-recycle-scroller__item-view {\n  width: 100%;\n}\n\n.vue-recycle-scroller.ready.direction-horizontal .vue-recycle-scroller__item-view {\n  height: 100%;\n}\n</style>\n","<template>\n  <RecycleScroller\n    ref=\"scroller\"\n    :items=\"itemsWithSize\"\n    :min-item-size=\"minItemSize\"\n    :direction=\"direction\"\n    key-field=\"id\"\n    :list-tag=\"listTag\"\n    :item-tag=\"itemTag\"\n    v-bind=\"$attrs\"\n    @resize=\"onScrollerResize\"\n    @visible=\"onScrollerVisible\"\n    v-on=\"listeners\"\n  >\n    <template slot-scope=\"{ item: itemWithSize, index, active }\">\n      <slot\n        v-bind=\"{\n          item: itemWithSize.item,\n          index,\n          active,\n          itemWithSize\n        }\"\n      />\n    </template>\n    <template slot=\"before\">\n      <slot name=\"before\" />\n    </template>\n    <template slot=\"after\">\n      <slot name=\"after\" />\n    </template>\n    <template slot=\"empty\">\n      <slot name=\"empty\" />\n    </template>\n  </RecycleScroller>\n</template>\n\n<script>\nimport RecycleScroller from './RecycleScroller.vue'\nimport { props, simpleArray } from './common'\n\nexport default {\n  name: 'DynamicScroller',\n\n  components: {\n    RecycleScroller,\n  },\n\n  provide () {\n    if (typeof ResizeObserver !== 'undefined') {\n      this.$_resizeObserver = new ResizeObserver(entries => {\n        requestAnimationFrame(() => {\n          if (!Array.isArray(entries)) {\n            return\n          }\n          for (const entry of entries) {\n            if (entry.target) {\n              const event = new CustomEvent(\n                'resize',\n                {\n                  detail: {\n                    contentRect: entry.contentRect,\n                  },\n                },\n              )\n              entry.target.dispatchEvent(event)\n            }\n          }\n        })\n      })\n    }\n\n    return {\n      vscrollData: this.vscrollData,\n      vscrollParent: this,\n      vscrollResizeObserver: this.$_resizeObserver,\n    }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    ...props,\n\n    minItemSize: {\n      type: [Number, String],\n      required: true,\n    },\n  },\n\n  data () {\n    return {\n      vscrollData: {\n        active: true,\n        sizes: {},\n        validSizes: {},\n        keyField: this.keyField,\n        simpleArray: false,\n      },\n    }\n  },\n\n  computed: {\n    simpleArray,\n\n    itemsWithSize () {\n      const result = []\n      const { items, keyField, simpleArray } = this\n      const sizes = this.vscrollData.sizes\n      const l = items.length\n      for (let i = 0; i < l; i++) {\n        const item = items[i]\n        const id = simpleArray ? i : item[keyField]\n        let size = sizes[id]\n        if (typeof size === 'undefined' && !this.$_undefinedMap[id]) {\n          size = 0\n        }\n        result.push({\n          item,\n          id,\n          size,\n        })\n      }\n      return result\n    },\n\n    listeners () {\n      const listeners = {}\n      for (const key in this.$listeners) {\n        if (key !== 'resize' && key !== 'visible') {\n          listeners[key] = this.$listeners[key]\n        }\n      }\n      return listeners\n    },\n  },\n\n  watch: {\n    items () {\n      this.forceUpdate(false)\n    },\n\n    simpleArray: {\n      handler (value) {\n        this.vscrollData.simpleArray = value\n      },\n      immediate: true,\n    },\n\n    direction (value) {\n      this.forceUpdate(true)\n    },\n\n    itemsWithSize (next, prev) {\n      const scrollTop = this.$el.scrollTop\n\n      // Calculate total diff between prev and next sizes\n      // over current scroll top. Then add it to scrollTop to\n      // avoid jumping the contents that the user is seeing.\n      let prevActiveTop = 0; let activeTop = 0\n      const length = Math.min(next.length, prev.length)\n      for (let i = 0; i < length; i++) {\n        if (prevActiveTop >= scrollTop) {\n          break\n        }\n        prevActiveTop += prev[i].size || this.minItemSize\n        activeTop += next[i].size || this.minItemSize\n      }\n      const offset = activeTop - prevActiveTop\n\n      if (offset === 0) {\n        return\n      }\n\n      this.$el.scrollTop += offset\n    },\n  },\n\n  beforeCreate () {\n    this.$_updates = []\n    this.$_undefinedSizes = 0\n    this.$_undefinedMap = {}\n  },\n\n  activated () {\n    this.vscrollData.active = true\n  },\n\n  deactivated () {\n    this.vscrollData.active = false\n  },\n\n  methods: {\n    onScrollerResize () {\n      const scroller = this.$refs.scroller\n      if (scroller) {\n        this.forceUpdate()\n      }\n      this.$emit('resize')\n    },\n\n    onScrollerVisible () {\n      this.$emit('vscroll:update', { force: false })\n      this.$emit('visible')\n    },\n\n    forceUpdate (clear = true) {\n      if (clear || this.simpleArray) {\n        this.vscrollData.validSizes = {}\n      }\n      this.$emit('vscroll:update', { force: true })\n    },\n\n    scrollToItem (index) {\n      const scroller = this.$refs.scroller\n      if (scroller) scroller.scrollToItem(index)\n    },\n\n    getItemSize (item, index = undefined) {\n      const id = this.simpleArray ? (index != null ? index : this.items.indexOf(item)) : item[this.keyField]\n      return this.vscrollData.sizes[id] || 0\n    },\n\n    scrollToBottom () {\n      if (this.$_scrollingToBottom) return\n      this.$_scrollingToBottom = true\n      const el = this.$el\n      // Item is inserted to the DOM\n      this.$nextTick(() => {\n        el.scrollTop = el.scrollHeight + 5000\n        // Item sizes are computed\n        const cb = () => {\n          el.scrollTop = el.scrollHeight + 5000\n          requestAnimationFrame(() => {\n            el.scrollTop = el.scrollHeight + 5000\n            if (this.$_undefinedSizes === 0) {\n              this.$_scrollingToBottom = false\n            } else {\n              requestAnimationFrame(cb)\n            }\n          })\n        }\n        requestAnimationFrame(cb)\n      })\n    },\n  },\n}\n</script>\n","<script>\nexport default {\n  name: 'DynamicScrollerItem',\n\n  inject: [\n    'vscrollData',\n    'vscrollParent',\n    'vscrollResizeObserver',\n  ],\n\n  props: {\n    // eslint-disable-next-line vue/require-prop-types\n    item: {\n      required: true,\n    },\n\n    watchData: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Indicates if the view is actively used to display an item.\n     */\n    active: {\n      type: Boolean,\n      required: true,\n    },\n\n    index: {\n      type: Number,\n      default: undefined,\n    },\n\n    sizeDependencies: {\n      type: [Array, Object],\n      default: null,\n    },\n\n    emitResize: {\n      type: Boolean,\n      default: false,\n    },\n\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  computed: {\n    id () {\n      if (this.vscrollData.simpleArray) return this.index\n      // eslint-disable-next-line no-prototype-builtins\n      if (this.item.hasOwnProperty(this.vscrollData.keyField)) return this.item[this.vscrollData.keyField]\n      throw new Error(`keyField '${this.vscrollData.keyField}' not found in your item. You should set a valid keyField prop on your Scroller`)\n    },\n\n    size () {\n      return (this.vscrollData.validSizes[this.id] && this.vscrollData.sizes[this.id]) || 0\n    },\n\n    finalActive () {\n      return this.active && this.vscrollData.active\n    },\n  },\n\n  watch: {\n    watchData: 'updateWatchData',\n\n    id () {\n      if (!this.size) {\n        this.onDataUpdate()\n      }\n    },\n\n    finalActive (value) {\n      if (!this.size) {\n        if (value) {\n          if (!this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes++\n            this.vscrollParent.$_undefinedMap[this.id] = true\n          }\n        } else {\n          if (this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes--\n            this.vscrollParent.$_undefinedMap[this.id] = false\n          }\n        }\n      }\n\n      if (this.vscrollResizeObserver) {\n        if (value) {\n          this.observeSize()\n        } else {\n          this.unobserveSize()\n        }\n      } else if (value && this.$_pendingVScrollUpdate === this.id) {\n        this.updateSize()\n      }\n    },\n  },\n\n  created () {\n    if (this.$isServer) return\n\n    this.$_forceNextVScrollUpdate = null\n    this.updateWatchData()\n\n    if (!this.vscrollResizeObserver) {\n      for (const k in this.sizeDependencies) {\n        this.$watch(() => this.sizeDependencies[k], this.onDataUpdate)\n      }\n\n      this.vscrollParent.$on('vscroll:update', this.onVscrollUpdate)\n      this.vscrollParent.$on('vscroll:update-size', this.onVscrollUpdateSize)\n    }\n  },\n\n  mounted () {\n    if (this.vscrollData.active) {\n      this.updateSize()\n      this.observeSize()\n    }\n  },\n\n  beforeDestroy () {\n    this.vscrollParent.$off('vscroll:update', this.onVscrollUpdate)\n    this.vscrollParent.$off('vscroll:update-size', this.onVscrollUpdateSize)\n    this.unobserveSize()\n  },\n\n  methods: {\n    updateSize () {\n      if (this.finalActive) {\n        if (this.$_pendingSizeUpdate !== this.id) {\n          this.$_pendingSizeUpdate = this.id\n          this.$_forceNextVScrollUpdate = null\n          this.$_pendingVScrollUpdate = null\n          this.computeSize(this.id)\n        }\n      } else {\n        this.$_forceNextVScrollUpdate = this.id\n      }\n    },\n\n    updateWatchData () {\n      if (this.watchData && !this.vscrollResizeObserver) {\n        this.$_watchData = this.$watch('item', () => {\n          this.onDataUpdate()\n        }, {\n          deep: true,\n        })\n      } else if (this.$_watchData) {\n        this.$_watchData()\n        this.$_watchData = null\n      }\n    },\n\n    onVscrollUpdate ({ force }) {\n      // If not active, sechedule a size update when it becomes active\n      if (!this.finalActive && force) {\n        this.$_pendingVScrollUpdate = this.id\n      }\n\n      if (this.$_forceNextVScrollUpdate === this.id || force || !this.size) {\n        this.updateSize()\n      }\n    },\n\n    onDataUpdate () {\n      this.updateSize()\n    },\n\n    computeSize (id) {\n      this.$nextTick(() => {\n        if (this.id === id) {\n          const width = this.$el.offsetWidth\n          const height = this.$el.offsetHeight\n          this.applySize(width, height)\n        }\n        this.$_pendingSizeUpdate = null\n      })\n    },\n\n    applySize (width, height) {\n      const size = ~~(this.vscrollParent.direction === 'vertical' ? height : width)\n      if (size && this.size !== size) {\n        if (this.vscrollParent.$_undefinedMap[this.id]) {\n          this.vscrollParent.$_undefinedSizes--\n          this.vscrollParent.$_undefinedMap[this.id] = undefined\n        }\n        this.$set(this.vscrollData.sizes, this.id, size)\n        this.$set(this.vscrollData.validSizes, this.id, true)\n        if (this.emitResize) this.$emit('resize', this.id)\n      }\n    },\n\n    observeSize () {\n      if (!this.vscrollResizeObserver || !this.$el.parentNode) return\n      this.vscrollResizeObserver.observe(this.$el.parentNode)\n      this.$el.parentNode.addEventListener('resize', this.onResize)\n    },\n\n    unobserveSize () {\n      if (!this.vscrollResizeObserver) return\n      this.vscrollResizeObserver.unobserve(this.$el.parentNode)\n      this.$el.parentNode.removeEventListener('resize', this.onResize)\n    },\n\n    onResize (event) {\n      const { width, height } = event.detail.contentRect\n      this.applySize(width, height)\n    },\n  },\n\n  render (h) {\n    return h(this.tag, this.$slots.default)\n  },\n}\n</script>\n","import config from './config'\n\nimport RecycleScroller from './components/RecycleScroller.vue'\nimport DynamicScroller from './components/DynamicScroller.vue'\nimport DynamicScrollerItem from './components/DynamicScrollerItem.vue'\n\nexport { default as IdState } from './mixins/IdState'\n\nexport {\n  RecycleScroller,\n  DynamicScroller,\n  DynamicScrollerItem,\n}\n\nfunction registerComponents (Vue, prefix) {\n  Vue.component(`${prefix}recycle-scroller`, RecycleScroller)\n  Vue.component(`${prefix}RecycleScroller`, RecycleScroller)\n  Vue.component(`${prefix}dynamic-scroller`, DynamicScroller)\n  Vue.component(`${prefix}DynamicScroller`, DynamicScroller)\n  Vue.component(`${prefix}dynamic-scroller-item`, DynamicScrollerItem)\n  Vue.component(`${prefix}DynamicScrollerItem`, DynamicScrollerItem)\n}\n\nconst plugin = {\n  // eslint-disable-next-line no-undef\n  version: VERSION,\n  install (Vue, options) {\n    const finalOptions = Object.assign({}, {\n      installComponents: true,\n      componentsPrefix: '',\n    }, options)\n\n    for (const key in finalOptions) {\n      if (typeof finalOptions[key] !== 'undefined') {\n        config[key] = finalOptions[key]\n      }\n    }\n\n    if (finalOptions.installComponents) {\n      registerComponents(Vue, finalOptions.componentsPrefix)\n    }\n  },\n}\n\nexport default plugin\n\n// Auto-install\nlet GlobalVue = null\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin)\n}\n","<template>\r\n  <div>\r\n    <div id=\"wrapper\">\r\n      <div id=\"content\" ref=\"content\">\r\n        <div id=\"content-item\" v-for=\"i in tableData\" :key=\"i.id\">\r\n          {{ i.name }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <el-button @click=\"goBottom\">底部</el-button>\r\n    <el-button @click=\"goTop\">顶部</el-button>\r\n    <!-- <recycle-scroller\r\n      class=\"virtual-list\"\r\n      :buffer=\"20\"\r\n      :prerender=\"200\"\r\n      style=\"height: 400px\"\r\n      :item-size=\"24\"\r\n      key-field=\"id\"\r\n      :items=\"tableData\"\r\n      @scroll-end=\"loadMore\"\r\n    >\r\n      <template v-slot=\"{ item, index }\">\r\n  \r\n        <div class=\"list-item\" :key=\"item.id\">\r\n          <span>{{ item.id }}</span>\r\n          <span>{{ item.name }}</span>\r\n            {{item.id}}\r\n        </div>\r\n      </template>\r\n    </recycle-scroller> -->\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <!-- <el-select\r\n      ref=\"selectRef\"\r\n      @visible-change=\"changeSlect\"\r\n      v-model=\"v\"\r\n      v-loadmore=\"getMore\"\r\n      filterable\r\n    >\r\n      <el-option\r\n        v-for=\"(item, index) in optionList\"\r\n        :key=\"index\"\r\n        :value=\"item.value\"\r\n        :label=\"item.value+'----'+item.label\"\r\n      ></el-option>\r\n    </el-select> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { RecycleScroller } from \"vue-virtual-scroller\"; // 引入它\r\nexport default {\r\n  name: \"VirtualList\",\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      isFirst: true,\r\n      optionList: [],\r\n      v: \"\",\r\n      scrollTop: 0,\r\n    };\r\n  },\r\n  components: {\r\n    RecycleScroller,\r\n  },\r\n  mounted() {\r\n    for (let i = 1; i < 31; i++) {\r\n      this.optionList.push({ value: i, label: i + i + 1 });\r\n    }\r\n    for (let i = 1; i < 100; i++) {\r\n      this.tableData.push({ id: i, name: \"guy\" + Math.random() });\r\n    }\r\n    console.log(\"000\", this.$refs.content.scrollHeight);\r\n    // 滚动容器\r\n    let scrollWrapper = document.getElementById(\"content\");\r\n    scrollWrapper.onscroll = (e) => {\r\n      if (\r\n        this.$refs.content.scrollHeight ==\r\n        scrollWrapper.scrollTop + scrollWrapper.clientHeight\r\n      ) {\r\n        //   //  模拟动态请求数据\r\n        // let leng = this.tableData.length;\r\n        // setTimeout(() => {\r\n        //   for (let i = leng; i < leng + 50; i++) {\r\n        //     this.tableData.push({ id: i + 1, name: \"guy\" + Math.random() });\r\n        //   }\r\n        // }, 100);\r\n      }\r\n    };\r\n    scrollWrapper.scrollTo({\r\n      behavior: \"smooth\",\r\n    });\r\n  },\r\n  methods: {\r\n    goBottom() {\r\n      console.log(document.querySelector(\"#content\").offsetHeight);\r\n      //获取中间内容盒子的可见区域高度\r\n      this.scrollTop =\r\n        document.querySelector(\"#content\").scrollHeight -\r\n        document.querySelector(\"#content\").offsetHeight;\r\n      // setTimeout((res) => {\r\n      //   //加个定时器，防止上面高度没获取到，再获取一遍。\r\n      //   if (this.scrollTop != this.$refs.content.offsetHeight) {\r\n      //     this.scrollTop = document.querySelector(\"#content\").offsetHeight;\r\n      //   }\r\n      // }, 100);\r\n      //scrollTop：滚动条距离顶部的距离。\r\n      //回到底部\r\n      // this.$refs.content.scrollTop = this.scrollTop;\r\n      this.$refs.content.scrollTo({\r\n        behavior: \"smooth\",\r\n        top: this.scrollTop,\r\n      });\r\n    },\r\n    goTop() {\r\n      this.$refs.content.scrollTo({\r\n        behavior: \"smooth\",\r\n        top: 0,\r\n      });\r\n    },\r\n    loadMore() {\r\n      if (this.isFirst) {\r\n        //   第一次进来不触发请求\r\n        this.isFirst = false;\r\n        return;\r\n      }\r\n      let leng = this.tableData.length;\r\n      setTimeout(() => {\r\n        //  模拟动态请求数据\r\n        for (let i = leng; i < leng + 50; i++) {\r\n          this.tableData.push({ id: i + 1, name: \"guy\" + Math.random() });\r\n        }\r\n        console.log(\"后面\", this.tableData);\r\n      }, 100);\r\n    },\r\n    getMore() {\r\n      console.log(\"加载了\", this.optionList.length);\r\n      let l = this.optionList.length;\r\n      for (let i = l; i < l + 20; i++) {\r\n        this.optionList.push({ value: i, label: i });\r\n      }\r\n    },\r\n    changeSlect() {},\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#wrapper {\r\n  height: 600px;\r\n  width: 400px;\r\n  border: 1px solid #000;\r\n  // padding: 10px;\r\n\r\n  #content {\r\n    height: 100%;\r\n    overflow: auto;\r\n\r\n    box-sizing: border-box;\r\n    #content-item {\r\n      height: 30px;\r\n      line-height: 30px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=bd4e5596&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=bd4e5596&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"bd4e5596\",\n  null\n  \n)\n\nexport default component.exports","(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Scrollparent = factory();\n  }\n}(this, function () {\n  function isScrolling(node) {\n    var overflow = getComputedStyle(node, null).getPropertyValue(\"overflow\");\n\n    return overflow.indexOf(\"scroll\") > -1 || overflow.indexOf(\"auto\") > - 1;\n  }\n\n  function scrollParent(node) {\n    if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n      return undefined;\n    }\n\n    var current = node.parentNode;\n    while (current.parentNode) {\n      if (isScrolling(current)) {\n        return current;\n      }\n\n      current = current.parentNode;\n    }\n\n    return document.scrollingElement || document.documentElement;\n  }\n\n  return scrollParent;\n}));"],"names":["render","_vm","this","_c","_self","attrs","ref","_l","tableData","i","key","id","_v","_s","name","on","goBottom","goTop","staticRenderFns","getInternetExplorerVersion","ua","window","navigator","userAgent","msie","indexOf","parseInt","substring","trident","rv","edge","isIE","initCompat","init","ResizeObserver","_h","$createElement","staticClass","_scopeId","methods","compareAndNotify","_w","$el","offsetWidth","offsetHeight","$emit","addResizeHandlers","_resizeObject","contentDocument","defaultView","addEventListener","removeResizeHandlers","onload","removeEventListener","mounted","_this","$nextTick","object","document","createElement","setAttribute","type","appendChild","data","beforeDestroy","install","Vue","component","plugin","version","GlobalVue","global","use","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","arr2","iter","toString","call","from","processOptions","value","options","callback","throttle","delay","timeout","lastState","currentArgs","arguments","undefined","throttled","state","_len","args","_key","leading","apply","concat","clearTimeout","setTimeout","_clear","deepEqual","val1","val2","VisibilityState","el","vnode","observer","frozen","createObserver","destroyObserver","result","entry","once","_ref","throttleOptions","_leading","oldResult","IntersectionObserver","entries","intersectingEntry","find","e","isIntersecting","intersectionRatio","threshold","intersection","context","observe","disconnect","get","bind","_ref2","console","warn","_vue_visibilityState","update","_ref3","oldValue","unbind","ObserveVisibility","directive","config","itemsLimit","items","required","keyField","String","default","direction","validator","includes","listTag","itemTag","simpleArray","supportsPassive","opts","uid","script$2","components","ResizeObserver$1","directives","itemSize","Number","gridItems","itemSecondarySize","minItemSize","sizeField","typeField","buffer","pageMode","Boolean","prerender","emitUpdate","skipHover","listClass","itemClass","pool","totalSize","ready","hoverKey","computed","sizes","accumulator","field","current","computedMinSize","l","size","$_computedMinItemSize","watch","updateVisibleItems","applyPageMode","handler","deep","created","$_startIndex","$_endIndex","$_views","Map","$_unusedViews","$_scrollDirty","$_lastUpdateScrollPosition","$_prerender","error","activated","lastPosition","scrollToPosition","removeListeners","addView","index","item","view","position","nonReactive","used","push","unuseView","fake","unusedViews","nr","unusedPool","set","delete","handleResize","handleScroll","event","requestAnimationFrame","continuous","$_refreshTimout","handleVisibilityChange","isVisible","boundingClientRect","width","height","checkItem","checkPositionDiff","count","views","startIndex","endIndex","visibleStartIndex","visibleEndIndex","Math","min","scroll","getScroll","positionDiff","start","end","beforeSize","$refs","before","scrollHeight","after","afterSize","h","oldI","a","b","remainer","ceil","max","floor","itemsLimitError","$_continuous","clear","unusedIndex","v","Error","pop","offset","$_sortTimer","sortViews","getListenerTarget","ScrollParent","documentElement","body","isVertical","scrollState","bounds","getBoundingClientRect","boundsSize","top","left","innerHeight","innerWidth","scrollTop","clientHeight","scrollLeft","clientWidth","addListeners","listenerTarget","passive","scrollToItem","viewport","scrollDirection","scrollDistance","viewportEl","tagName","scroller","scrollerPosition","log","sort","viewA","viewB","__vue_script__$2","script$1","RecycleScroller","__vue_component__$2","provide","$_resizeObserver","CustomEvent","detail","contentRect","dispatchEvent","vscrollData","vscrollParent","vscrollResizeObserver","inheritAttrs","active","validSizes","itemsWithSize","$_undefinedMap","listeners","$listeners","forceUpdate","immediate","next","prev","prevActiveTop","activeTop","beforeCreate","$_updates","$_undefinedSizes","deactivated","onScrollerResize","onScrollerVisible","force","getItemSize","scrollToBottom","$_scrollingToBottom","cb","__vue_script__$1","script","inject","watchData","sizeDependencies","emitResize","tag","hasOwnProperty","finalActive","onDataUpdate","observeSize","unobserveSize","$_pendingVScrollUpdate","updateSize","$isServer","$_forceNextVScrollUpdate","updateWatchData","k","$watch","$on","onVscrollUpdate","onVscrollUpdateSize","$off","$_pendingSizeUpdate","computeSize","$_watchData","applySize","$set","parentNode","onResize","unobserve","$slots","__vue_script__","registerComponents","prefix","__vue_component__$1","__vue_component__","finalOptions","assign","installComponents","componentsPrefix","isFirst","optionList","label","random","content","scrollWrapper","getElementById","onscroll","scrollTo","behavior","querySelector","loadMore","leng","getMore","changeSlect","root","factory","define","isScrolling","node","overflow","getComputedStyle","getPropertyValue","scrollParent","HTMLElement","SVGElement","scrollingElement"],"sourceRoot":""}