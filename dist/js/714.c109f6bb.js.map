{"version":3,"file":"js/714.c109f6bb.js","mappings":"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","sources":["webpack://test/./src/views/Canvas/index.vue","webpack://test/src/views/Canvas/index.vue","webpack://test/./src/views/Canvas/index.vue?9d25","webpack://test/./src/views/Canvas/index.vue?ec5a"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"contanier\"},[_c('div',{staticClass:\"canvas-wrap\"},[_c('div',{attrs:{\"id\":\"drawCanvas\"}}),_c('div',{attrs:{\"id\":\"imgCanvas\"}})]),_c('div',{attrs:{\"id\":\"saveCanvas\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"contanier\">\r\n    <div class=\"canvas-wrap\">\r\n      <div id=\"drawCanvas\"></div>\r\n      <div id=\"imgCanvas\"></div>\r\n    </div>\r\n    <div id=\"saveCanvas\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"\",\r\n  data() {\r\n    return {\r\n      wrapWidth: \"\",\r\n      wrapHeight: \"\",\r\n      imgCanvas: null,\r\n      imgCtx: \"\",\r\n      drawCanvas: null,\r\n      drawCtx: \"\",\r\n      saveCanvas: null,\r\n      saveCtx: \"\",\r\n      ratio: \"\",\r\n      canvasHeight:'',\r\n      canvasWidth:''\r\n    };\r\n  },\r\n  methods: {\r\n    initImgCanvas() {\r\n      // 计算宽高比\r\n      let ww = this.wrapWidth; // 画布宽度\r\n      let wh = this.wrapHeight; // 画布高度\r\n      let iw = this.imgWidth; // 图片宽度\r\n      let ih = this.imgHeight; // 图片高度\r\n\r\n      if (iw / ih < ww / wh) {\r\n        // 以高为主\r\n        this.ratio = ih / wh;\r\n        this.canvasHeight = wh;\r\n        this.canvasWidth = (wh * iw) / ih;\r\n      } else {\r\n        // 以宽为主\r\n        this.ratio = iw / ww;\r\n        this.canvasWidth = ww;\r\n        this.canvasHeight = (ww * ih) / iw;\r\n      }\r\n\r\n      // 初始化画布大小\r\n      this.imgCanvas.width = this.canvasWidth;\r\n      this.imgCanvas.height = this.canvasHeight;\r\n      this.drawCanvas.width = this.canvasWidth;\r\n      this.drawCanvas.height = this.canvasHeight;\r\n      this.saveCanvas.width = this.canvasWidth;\r\n      this.saveCanvas.height = this.canvasHeight;\r\n\r\n      // 图片加载绘制\r\n      let img = document.createElement(\"img\");\r\n      img.src = this.imgUrl;\r\n      img.onload = () => {\r\n        console.log(\"图片已加载\");\r\n        this.imgCtx.drawImage(img, 0, 0, this.canvasWidth, this.canvasHeight);\r\n        this.renderDatas(); // 渲染原有数据\r\n      };\r\n    },\r\n    startDraw() {\r\n      // 绘制区域\r\n      if (this.isDrawing) return;\r\n      this.isDrawing = true;\r\n      // 绘制逻辑\r\n      this.drawCanvas.addEventListener(\"click\", this.drawImageClickFn);\r\n      this.drawCanvas.addEventListener(\"dblclick\", this.drawImageDblClickFn);\r\n      this.drawCanvas.addEventListener(\"mousemove\", this.drawImageMoveFn);\r\n    },\r\n\r\n    drawImageClickFn(e) {\r\n      let drawCtx = this.drawCtx;\r\n      if (e.offsetX || e.layerX) {\r\n        let pointX = e.offsetX == undefined ? e.layerX : e.offsetX;\r\n        let pointY = e.offsetY == undefined ? e.layerY : e.offsetY;\r\n        let lastPoint = this.drawingPoints[this.drawingPoints.length - 1] || [];\r\n        if (lastPoint[0] !== pointX || lastPoint[1] !== pointY) {\r\n          this.drawingPoints.push([pointX, pointY]);\r\n        }\r\n      }\r\n    },\r\n\r\n    drawImageMoveFn(e) {\r\n      let drawCtx = this.drawCtx;\r\n      if (e.offsetX || e.layerX) {\r\n        let pointX = e.offsetX == undefined ? e.layerX : e.offsetX;\r\n        let pointY = e.offsetY == undefined ? e.layerY : e.offsetY;\r\n        // 绘制\r\n        drawCtx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n\r\n        // 绘制点\r\n        drawCtx.fillStyle = \"blue\";\r\n        this.drawingPoints.forEach((item, i) => {\r\n          drawCtx.beginPath();\r\n          drawCtx.arc(...item, 6, 0, 180);\r\n          drawCtx.fill(); //填充\r\n        });\r\n\r\n        // 绘制动态区域\r\n        drawCtx.save();\r\n        drawCtx.beginPath();\r\n        this.drawingPoints.forEach((item, i) => {\r\n          drawCtx.lineTo(...item);\r\n        });\r\n        drawCtx.lineTo(pointX, pointY);\r\n        drawCtx.lineWidth = \"3\";\r\n        drawCtx.strokeStyle = \"blue\";\r\n        drawCtx.fillStyle = \"rgba(255, 0, 0, 0.3)\";\r\n        drawCtx.stroke();\r\n        drawCtx.fill(); //填充\r\n        drawCtx.restore();\r\n      }\r\n    },\r\n\r\n    drawImageDblClickFn(e) {\r\n      let drawCtx = this.drawCtx;\r\n      let saveCtx = this.saveCtx;\r\n      if (e.offsetX || e.layerX) {\r\n        let pointX = e.offsetX == undefined ? e.layerX : e.offsetX;\r\n        let pointY = e.offsetY == undefined ? e.layerY : e.offsetY;\r\n        let lastPoint = this.drawingPoints[this.drawingPoints.length - 1] || [];\r\n        if (lastPoint[0] !== pointX || lastPoint[1] !== pointY) {\r\n          this.drawingPoints.push([pointX, pointY]);\r\n        }\r\n      }\r\n      // 清空绘制图层\r\n      drawCtx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      // 绘制区域至保存图层\r\n      this.drawSaveArea(this.drawingPoints);\r\n\r\n      this.drawedPoints.push(this.drawingPoints);\r\n      this.drawingPoints = [];\r\n      this.isDrawing = false;\r\n\r\n      // 绘制结束逻辑\r\n      this.drawCanvas.removeEventListener(\"click\", this.drawImageClickFn);\r\n      this.drawCanvas.removeEventListener(\"dblclick\", this.drawImageDblClickFn);\r\n      this.drawCanvas.removeEventListener(\"mousemove\", this.drawImageMoveFn);\r\n    },\r\n    drawSaveArea(points) {\r\n      if (points.length === 0) return;\r\n      this.saveCtx.save();\r\n      this.saveCtx.beginPath();\r\n      points.forEach((item, i) => {\r\n        this.saveCtx.lineTo(...item);\r\n      });\r\n      this.saveCtx.closePath();\r\n      this.saveCtx.lineWidth = \"2\";\r\n      this.saveCtx.fillStyle = \"rgba(255,0, 255, 0.3)\";\r\n      this.saveCtx.strokeStyle = \"red\";\r\n      this.saveCtx.stroke();\r\n      this.saveCtx.fill();\r\n      this.saveCtx.restore();\r\n    },\r\n\r\n    savePoints() {\r\n      // 将画布坐标数据转换成提交数据\r\n      let objectPoints = [];\r\n      objectPoints = this.drawedPoints.map((area) => {\r\n        let polygon = {};\r\n        area.forEach((point, i) => {\r\n          polygon[`x${i + 1}`] = Math.round(point[0] * this.ratio);\r\n          polygon[`y${i + 1}`] = Math.round(point[1] * this.ratio);\r\n        });\r\n        return {\r\n          polygon: polygon,\r\n        };\r\n      });\r\n      this.submitData = objectPoints;\r\n      console.log(\"最终提交数据\", objectPoints);\r\n    },\r\n    renderDatas() {\r\n      // 将提交数据数据转换成画布坐标\r\n      this.drawedPoints = this.submitData.map((item) => {\r\n        let polygon = item.polygon;\r\n        let points = [];\r\n        for (let i = 1; i < Object.keys(polygon).length / 2 + 1; i++) {\r\n          if (!isNaN(polygon[`x${i}`]) && !isNaN(polygon[`y${i}`])) {\r\n            points.push([\r\n              polygon[`x${i}`] / this.ratio,\r\n              polygon[`y${i}`] / this.ratio,\r\n            ]);\r\n          }\r\n        }\r\n        this.drawSaveArea(points);\r\n        return points;\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.contanier {\r\n  width: 100%;\r\n//   .canvas-wrap {\r\n//     width: 100%;\r\n//     height: 100vh;\r\n//     background-image: url(\"@/assets/canvas/canvasImg.webp\");\r\n//     background-size: cover;\r\n//     position: relative;\r\n//     #drawCanvas {\r\n//       position: absolute;\r\n//       height: 100%;\r\n//       width: 100%;\r\n//     }\r\n//   }\r\n  #drawCanvas {\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-image: url(\"@/assets/canvas/canvasImg.webp\");\r\n    background-size: cover;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=a226e25e&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=a226e25e&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a226e25e\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_self","_c","_m","staticRenderFns","staticClass","attrs","name","data","wrapWidth","wrapHeight","imgCanvas","imgCtx","drawCanvas","drawCtx","saveCanvas","saveCtx","ratio","canvasHeight","canvasWidth","methods","initImgCanvas","ww","wh","iw","imgWidth","ih","imgHeight","width","height","img","document","createElement","src","imgUrl","onload","console","log","drawImage","renderDatas","startDraw","isDrawing","addEventListener","drawImageClickFn","drawImageDblClickFn","drawImageMoveFn","e","offsetX","layerX","pointX","undefined","pointY","offsetY","layerY","lastPoint","drawingPoints","length","push","clearRect","fillStyle","forEach","item","i","beginPath","arc","fill","save","lineTo","lineWidth","strokeStyle","stroke","restore","drawSaveArea","drawedPoints","removeEventListener","points","closePath","savePoints","objectPoints","map","area","polygon","point","Math","round","submitData","Object","keys","isNaN","component"],"sourceRoot":""}